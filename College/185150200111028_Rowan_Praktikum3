{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"185150200111028_Rowan_Praktikum3","provenance":[{"file_id":"1lFs3BNNsEaaDsooqO2FoD-bo0TEggpxa","timestamp":1603324683221}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"-qDsm6BnME2X"},"source":["# Praktikum Pengantar Pembelajaran Mesin\n","\n","\n","---\n","## Bab 3. Klasifikasi K-Nearest Neighbor (KNN)\n"]},{"cell_type":"markdown","metadata":{"id":"z_VawE4L4na8"},"source":["Tuliskan Nama, NIM, dan kelas Anda:\n","\n","Nama  : Rowan\n","\n","NIM   : 185150200111028\n","\n","Kelas : TIF - C"]},{"cell_type":"markdown","metadata":{"id":"sQAGcnK3MOS7"},"source":["### 1) Import Data\n","\n","Unduh dataset yang akan digunakan pada praktikum kali ini. Anda dapat menggunakan aplikasi wget untuk mendowload dataset dan menyimpannya dalam Google Colab. Jalankan cell di bawah ini untuk mengunduh dataset"]},{"cell_type":"code","metadata":{"id":"FpjqVlzBMNLd","colab":{"base_uri":"https://localhost:8080/","height":202},"executionInfo":{"status":"ok","timestamp":1603325978512,"user_tz":-420,"elapsed":2502,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"ffe8816f-f230-41db-b71d-e47742602ad2"},"source":["! wget https://dataset-ppm.s3.amazonaws.com/iris.csv"],"execution_count":null,"outputs":[{"output_type":"stream","text":["--2020-10-22 00:19:36--  https://dataset-ppm.s3.amazonaws.com/iris.csv\n","Resolving dataset-ppm.s3.amazonaws.com (dataset-ppm.s3.amazonaws.com)... 52.217.2.12\n","Connecting to dataset-ppm.s3.amazonaws.com (dataset-ppm.s3.amazonaws.com)|52.217.2.12|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 4609 (4.5K) [text/csv]\n","Saving to: ‘iris.csv’\n","\n","iris.csv            100%[===================>]   4.50K  --.-KB/s    in 0s      \n","\n","2020-10-22 00:19:37 (104 MB/s) - ‘iris.csv’ saved [4609/4609]\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"SJy4t3lIOgGp"},"source":["Setelah dataset berhasil diunduh, langkah berikutnya adalah membaca dataset dengan memanfaatkan fungsi **readcsv** dari library pandas. Lakukan pembacaan berkas csv ke dalam dataframe dengan nama **data** menggunakan fungsi **readcsv**. Jangan lupa untuk melakukan import library pandas terlebih dahulu\n"]},{"cell_type":"code","metadata":{"id":"mdhbxk_2OzbB"},"source":["import pandas as pd\n","import numpy as np\n","\n","data = pd.read_csv('iris.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"w6NfrIDTOK38"},"source":["\n","\n","Cek isi dataset Anda dengan menggunakan perintah **head()**"]},{"cell_type":"code","metadata":{"id":"Uaiaj796OFH3","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1603326025008,"user_tz":-420,"elapsed":1564,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"6deb8608-b32b-41c7-9600-7226268098a2"},"source":["data.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","      <th>species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   sepal_length  sepal_width  petal_length  petal_width      species\n","0           5.1          3.5           1.4          0.2  Iris-setosa\n","1           4.9          3.0           1.4          0.2  Iris-setosa\n","2           4.7          3.2           1.3          0.2  Iris-setosa\n","3           4.6          3.1           1.5          0.2  Iris-setosa\n","4           5.0          3.6           1.4          0.2  Iris-setosa"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"lfi1uHIxPdDe"},"source":["## 2) Membagi data menjadi data latih dan data uji\n","\n","Metode pembelajaran mesin memerlukan dua jenis data :\n","\n","\n","1.   Data latih : Digunakan untuk proses training metode klasifikasi\n","2.   Data uji : Digunakan untuk proses evaluasi metode klasifikasi\n","\n","Data uji dan data latih perlu dibuat terpisah (mutualy exclusive) agar hasil evaluasi lebih akurat.\n","\n","Data uji dan data latih dapat dibuat dengan cara membagi dataset dengan rasio tertentu, misalnya 80% data latih dan 20% data uji.\n","\n","Library Scikit-learn memiliki fungsi [train_test_split](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html) pada modul **model_selection** untuk membagi dataset menjadi data latih dan data uji. Bagilah dataset anda menjadi dua, yaitu **data_latih** dan **data_uji**.\n"]},{"cell_type":"code","metadata":{"id":"jJjfXgfmPTlU"},"source":["from sklearn.model_selection import train_test_split\n","data_latih, data_uji = train_test_split(data, test_size=0.2)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"tBhcsUDYfw2q"},"source":["Tampilkan banyaknya data pada **data_latih** dan **data_uji**. Seharusnya **data_latih** terdiri dari 120 data, dan **data_uji** terdiri dari 30 data"]},{"cell_type":"code","metadata":{"id":"6OtySD4efmmQ","colab":{"base_uri":"https://localhost:8080/","height":50},"executionInfo":{"status":"ok","timestamp":1603326165588,"user_tz":-420,"elapsed":800,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"4c1f5185-2f8e-40d3-cbe2-887d6f3cebd1"},"source":["print(data_latih.shape[0])\n","print(data_uji.shape[0])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["120\n","30\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"DeU-FCyTkVKC"},"source":["Pisahkan label/kategori dari data latih dan data uji menjadi variabel tersendiri. Beri nama variabelnya **label_latih** dan **label_uji**"]},{"cell_type":"code","metadata":{"id":"e4vC_M0mkkl3"},"source":["label_latih = data_latih.pop('species')\n","label_uji = data_uji.pop('species')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ogQLMrUjlU2_","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1603326233609,"user_tz":-420,"elapsed":649,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"83e3ba3b-b3c6-430f-f06c-7bda5778b8cc"},"source":["data_uji.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>90</th>\n","      <td>5.5</td>\n","      <td>2.6</td>\n","      <td>4.4</td>\n","      <td>1.2</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>5.5</td>\n","      <td>2.4</td>\n","      <td>3.7</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>5.1</td>\n","      <td>2.5</td>\n","      <td>3.0</td>\n","      <td>1.1</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>6.8</td>\n","      <td>3.2</td>\n","      <td>5.9</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>6.7</td>\n","      <td>3.1</td>\n","      <td>4.4</td>\n","      <td>1.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     sepal_length  sepal_width  petal_length  petal_width\n","90            5.5          2.6           4.4          1.2\n","81            5.5          2.4           3.7          1.0\n","98            5.1          2.5           3.0          1.1\n","143           6.8          3.2           5.9          2.3\n","65            6.7          3.1           4.4          1.4"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"xm_dJNeMgl9u"},"source":["## 3) Menghitung jarak euclidean\n","\n","Tahapan awal dari algoritma KNN adalah perhitungan jarak. Salah satu metode perhitungan jarak yang bisa digunakan adalah jarak Euclidean. Buatlah fungsi bernama **jarakEu** yang berfungsi menghitung jarak euclidean dari dua buah vektor (tanpa kelas)"]},{"cell_type":"code","metadata":{"id":"QNEYOTLsfqld"},"source":["def jarakEu(data1, data2):\n","  jarak = np.square(data1 - data2)\n","  jarak = np.sum(jarak)\n","  return np.sqrt(jarak)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"bfznAo4-tUM5"},"source":["Uji fungsi **jarakEu** untuk menghitung jarak antara data latih pertama dengan data uji pertama."]},{"cell_type":"code","metadata":{"id":"kEK4o1-LicZ5","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1603326417717,"user_tz":-420,"elapsed":645,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"7b126561-34fe-4e5a-f96e-7c0b1a1ac3af"},"source":["jarak = jarakEu(data_latih.iloc[0], data_uji.iloc[0])\n","print(jarak)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0.4795831523312723\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"46FZOwFIlkM_"},"source":["## 4) Algoritma KNN\n","\n","Implementasikan algoritma KNN dengan tahapan-tahapan berikut :\n","1. Hitung jarak antara data uji dengan setiap data latih.\n","2. Cari *k* data latih dengan jarak terkecil.\n","3. Tentukan kelas dari *k* data latih tersebut.\n","4. Kelas data uji ditentukan dari mayoritas kelas *k* data latih.\n","\n","Buatlah fungsi dengan nama **knn** yang menerima input berupa *k*, sekumpulan data latih dan labelnya, serta sebuah data uji"]},{"cell_type":"code","metadata":{"id":"qFB6pLbeikcG"},"source":["from collections import Counter\n","\n","def knn(k, datalatih, labellatih, datauji):\n","  jarak = np.array([jarakEu(datalatih.iloc[x], datauji) for x in range (datalatih.shape[0])])\n","  indeks_k_minimum = jarak.argsort()[:k]\n","  k_kelas = labellatih.iloc[indeks_k_minimum].to_numpy()\n","  counter = Counter(k_kelas)\n","  kelas_uji = counter.most_common(1)[0][0]\n","  return kelas_uji"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"m7PEASGt0I04"},"source":["Lakukan pengujian fungsi **knn** untuk menentukan kelas dari data uji pertama"]},{"cell_type":"code","metadata":{"id":"2DfvWo7Nr2Iw","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1603326935767,"user_tz":-420,"elapsed":670,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"07aa93f6-923c-44a3-8815-00356c62b375"},"source":["hasil = knn(3, data_latih, label_latih, data_uji.iloc[0])\n","print(hasil)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Iris-versicolor\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"c7qKiXO3cINi"},"source":["## 5) KNN pada Scikit-learn\n","\n","Library scikit-learn memiliki algoritma KNN yang siap untuk digunakan. Sebagai pengenalan, Anda akan melakukan klasifikasi data yang sama menggunakan KNN yang tersedia pada library scikit-learn"]},{"cell_type":"code","metadata":{"id":"Rmt06ECzcdbf","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1603327058838,"user_tz":-420,"elapsed":674,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"36eab948-f206-437e-d3b5-81afccf736ec"},"source":["from sklearn.neighbors import KNeighborsClassifier\n","KNN = KNeighborsClassifier(n_neighbors = 3)\n","KNN.fit(data_latih, label_latih)\n","kelas = KNN.predict([data_uji.iloc[0]])\n","print(kelas)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["['Iris-versicolor']\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ZiDmUxVBuo42"},"source":["## TUGAS\n","1. Buatlah fungsi bernama **jarakCity** yang berfungsi menghitung jarak City Block antara dua vektor.\n","2. Buatlah sebuah fungsi bernama **knn_multi** yang dapat menentukan kelas dari **semua** data uji (Fungsi **knn** yang sudah Anda buat hanya dapat menentukan kelas dari sebuah data uji. Anda dapat memanfaatkan fungsi **knn** yang telah ada\n","3. Buatlah fungsi bernama **cek_hasil** yang berfungsi membandingkan hasil klasifikasi dengan label sebenarnya. Fungsi ini menerima input 2 buah list, yaitu list label hasil klasifikasi dan list label data uji yang sebenarnya. Output dari fungsi ini adalah integer, yang menunjukkan berapa banyak label hasil klasifikasi yang sama dengan label data uji sebenarnya.\n","4. Jalankan fungsi **knn_multi** dengan nilai k=3, k=7,k=9 dan k=13. Amati hasil dari fungsi **cek_hasil** dengan nilai k tersebut. Apa kesimpulan Anda?"]},{"cell_type":"code","metadata":{"id":"BgNZPfuvrV0K"},"source":["#jawaban soal 1\n","def jarakCity(data1, data2):\n","  jarak = abs(data1 - data2)\n","  jarak = np.sum(jarak)\n","  return jarak"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"B5OZWrTkJ7rg","colab":{"base_uri":"https://localhost:8080/","height":151},"executionInfo":{"status":"ok","timestamp":1603331121290,"user_tz":-420,"elapsed":3438,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"32af2f9a-38fd-401e-9df0-ff2a33213b01"},"source":["#jawaban soal 2\n","def knn(k, datalatih, labellatih, datauji):\n","  jarak = np.array([jarakCity(datalatih.iloc[x], datauji) for x in range (datalatih.shape[0])])\n","  indeks_k_minimum = jarak.argsort()[:k]\n","  k_kelas = labellatih.iloc[indeks_k_minimum].to_numpy()\n","  counter = Counter(k_kelas)\n","  kelas_uji = counter.most_common(1)[0][0]\n","  return kelas_uji\n","  \n","def knn_multi(k, datalatih, labellatih, datauji):\n","  kelas_uji = np.array([knn(k, datalatih, labellatih, datauji.iloc[x]) for x in range (datauji.shape[0])])\n","  return kelas_uji\n","\n","knn_multi_hasil = knn_multi(3, data_latih, label_latih, data_uji)\n","print(knn_multi_hasil)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["['Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-virginica'\n"," 'Iris-versicolor' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n"," 'Iris-versicolor' 'Iris-versicolor' 'Iris-setosa' 'Iris-versicolor'\n"," 'Iris-setosa' 'Iris-setosa' 'Iris-versicolor' 'Iris-setosa'\n"," 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-setosa'\n"," 'Iris-setosa' 'Iris-versicolor' 'Iris-versicolor' 'Iris-virginica'\n"," 'Iris-virginica' 'Iris-versicolor' 'Iris-virginica' 'Iris-virginica'\n"," 'Iris-versicolor' 'Iris-virginica']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"XoH2D5AAKLLJ","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1603331127277,"user_tz":-420,"elapsed":2644,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"11fded41-f92c-4b57-cd02-3f45b932e127"},"source":["#jawaban soal 3\n","def cek_hasil(A, B):\n","  counter = sum(x == y for x, y in zip(A, B))\n","  return counter\n","\n","print(cek_hasil(label_uji, knn_multi(3, data_latih, label_latih, data_uji)))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["27\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"eUFsXtEQKOeN","colab":{"base_uri":"https://localhost:8080/","height":84},"executionInfo":{"status":"ok","timestamp":1603331137281,"user_tz":-420,"elapsed":8468,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"2bff8181-7956-4c23-ae59-89ab3fd7f140"},"source":["\n","\n","\n","\n","#jawaban soal 4\n","hasil_k3 = knn_multi(3, data_latih, label_latih, data_uji)\n","hasil_k7 = knn_multi(7, data_latih, label_latih, data_uji)\n","hasil_k9 = knn_multi(9, data_latih, label_latih, data_uji)\n","hasil_k13 = knn_multi(13, data_latih, label_latih, data_uji)\n","\n","print(\"Hasil K3 adalah \", cek_hasil(label_uji, hasil_k3))\n","print(\"Hasil K7 adalah \", cek_hasil(label_uji, hasil_k7))\n","print(\"Hasil K9 adalah \", cek_hasil(label_uji, hasil_k9))\n","print(\"Hasil K13 adalah \", cek_hasil(label_uji, hasil_k13))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Hasil K3 adalah  27\n","Hasil K7 adalah  28\n","Hasil K9 adalah  29\n","Hasil K13 adalah  29\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Ml45KVHX4H6o"},"source":["Penjelasan jawaban soal nomor 4"]},{"cell_type":"code","metadata":{"id":"OmixS-luYHc6"},"source":["Dari hasil kode program diatas dapat diketahui bahwa hasil perhitungan menggunakan metode KNN\n","dengan 4 macam nilai k memberikan hasil yang tidak jauh berbeda dalam kasus ini 29 adalah hasil\n","yang paling dominan dengan nilai k=9, dan k=13."],"execution_count":null,"outputs":[]}]}