{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"185150200111028_ROWAN_UTP","provenance":[{"file_id":"1nu8uZmjsLffe52u0ie8gLcWeprwulnyV","timestamp":1605440037884}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"2k8V4SSIVs06"},"source":["# **Praktikum Pengantar Pembelajaran Mesin**\n","---\n","## Ujian Tengah Praktikum\n","---"]},{"cell_type":"markdown","metadata":{"id":"LLlXUp_oVs07"},"source":["Terapkan apa yang selama ini Anda pelajari di kelas praktikum untuk ujian kali ini.\n","\n","Diberikan dataset yang akan diolah sedemikian rupa dan akan dilakukan tahapan *machine learning*, yaitu klasifikasi dengan beberapa metode yang berbeda.\n","\n","Disarankan untuk mengerjakan dengan kemampuan sendiri tanpa bantuan orang lain.\n","\n","Jika ada yang ingin ditanyakan terkait soal, silahkan bertanya kepada asisten masing-masing.\n","\n","**Selamat mengerjakan!**"]},{"cell_type":"markdown","metadata":{"id":"PLcNQ8kwVs08"},"source":["> **Petunjuk pengerjaan soal:**\n","1.   Pastikan Anda menggunakan akun email UB.\n","2.   Klik tombol Copy to Drive.\n","3.   Beri nama file NIM_NAMA_UTP.\n","4.   Isilah cell yang kosong sesuai dengan perintah yang diberikan.\n","5.   Untuk cara dan format pengumpulan disesuaikan dengan aturan dari asisten masing-masing."]},{"cell_type":"markdown","metadata":{"id":"TrjwtBVFVs09"},"source":["### 1. Import Data\n","*Dataset* yang digunakan dapat diakses pada *link* berikut:\n","> https://raw.githubusercontent.com/frnkldgnwn/utp-ppm/main/breast_cancer.csv\n","\n","Simpan *link* tersebut dalam sebuah variabel **url** seperti contoh berikut:\n","```\n","url = 'https://www.google.com'\n","```\n","\n","Modifikasi contoh kode diatas untuk menyimpan **url** *dataset* yang akan digunakan dan jalankan pada *cell* di bawah ini."]},{"cell_type":"code","metadata":{"id":"G_uykHGbVs0-","executionInfo":{"status":"ok","timestamp":1605442752775,"user_tz":-420,"elapsed":1209,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["url = 'https://raw.githubusercontent.com/frnkldgnwn/utp-ppm/main/breast_cancer.csv'"],"execution_count":172,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"q2eH0padVs1D"},"source":["Dengan memanfaatkan fungsi **read_csv** dari *library* pandas, lakukanlah pembacaan berkas csv dari variabel **url** ke dalam dataframe dengan nama **data** menggunakan fungsi **read_csv** tersebut dan jadikan **kolom pertama** dari dataset menjadi kolom indeks dari *dataframe*.\n","\n","> Jangan lupa untuk melakukan import *library* pandas terlebih dahulu.\n"]},{"cell_type":"code","metadata":{"id":"GbHVsqPiVs1D","executionInfo":{"status":"ok","timestamp":1605443699519,"user_tz":-420,"elapsed":1084,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["import pandas as pd\n","data = pd.read_csv(url, index_col = 0)"],"execution_count":203,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wSrXR9CMVs1I"},"source":["Cek isi *dataset* Anda terlebih dahulu dengan perintah **head()**."]},{"cell_type":"code","metadata":{"id":"jtlUWNP_Vs1J","executionInfo":{"status":"ok","timestamp":1605443489892,"user_tz":-420,"elapsed":1002,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"11dd3951-5358-4703-f01d-a3188cadb5cc","colab":{"base_uri":"https://localhost:8080/","height":225}},"source":["data.head()"],"execution_count":195,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clump_thickness</th>\n","      <th>cell_size</th>\n","      <th>cell_shape</th>\n","      <th>marginal_adhesion</th>\n","      <th>epithelial_cell_size</th>\n","      <th>bare_nucklei</th>\n","      <th>bland_chromatin</th>\n","      <th>normal_nucleoli</th>\n","      <th>mitoses</th>\n","      <th>diagnosis</th>\n","    </tr>\n","    <tr>\n","      <th>id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1000025</th>\n","      <td>5.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1002945</th>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1015425</th>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1016277</th>\n","      <td>6.0</td>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>7.0</td>\n","      <td>1.0</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1017023</th>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>benign</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         clump_thickness  cell_size  ...  mitoses  diagnosis\n","id                                   ...                    \n","1000025              5.0        1.0  ...      1.0     benign\n","1002945              5.0        4.0  ...      1.0     benign\n","1015425              3.0        1.0  ...      1.0     benign\n","1016277              6.0        8.0  ...      1.0     benign\n","1017023              4.0        1.0  ...      NaN     benign\n","\n","[5 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":195}]},{"cell_type":"markdown","metadata":{"id":"vTUFIihkVs1N"},"source":["### 2. *Preprocessing*\n","Pada ujian kali ini, *preprocessing* data akan dilakukan dengan dua tahap, yaitu:\n","1.   Penanganan *Missing Value*\n","2.   Normalisasi *MinMax*"]},{"cell_type":"markdown","metadata":{"id":"C_wOqkDNVs1N"},"source":["#### 2.1. Penanganan *Missing Value*\n","\n","Lakukan penanganan *Missing Value* pada **data** dengan metode yang Anda pilih sendiri.\n","\n","Simpan hasil *dataframe* Anda yang baru dengan nama **data_imputasi**."]},{"cell_type":"code","metadata":{"id":"Es8XvYALVs1V","executionInfo":{"status":"ok","timestamp":1605442759010,"user_tz":-420,"elapsed":928,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["data = data.replace(0.0, np.NaN)"],"execution_count":174,"outputs":[]},{"cell_type":"code","metadata":{"id":"YunndAeeVs1O","executionInfo":{"status":"ok","timestamp":1605442760284,"user_tz":-420,"elapsed":927,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["def imputasi(df_input):\n","  list_columns = df_input.columns\n","  class_columns = list_columns[-1]\n","  for column in list_columns[:-1]:\n","    df_input[column] = df_input[column].fillna(df_input.groupby(class_columns)[column].transform('mean'))\n","  return df_input"],"execution_count":175,"outputs":[]},{"cell_type":"code","metadata":{"id":"nLJTyDmcVs1R","executionInfo":{"status":"ok","timestamp":1605443702675,"user_tz":-420,"elapsed":1271,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["data_imputasi = imputasi(data)"],"execution_count":204,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"v0Dju9ZwVs1Z"},"source":["#### 2.2. Normalisasi *MinMax*\n","\n","Persamaan dari fungsi normalisasi *MinMax* adalah sebagai berikut:\n","\n","$x'=\\frac{x-min(x)}{max(x)-min(x)}$\n","\n","Dengan rumus tersebut, lakukan normalisasi *dataset* Anda dengan metode normalisasi *MinMax*.\n","\n","Simpan hasil *dataframe* Anda yang baru dengan nama **data_normalisasi**."]},{"cell_type":"code","metadata":{"id":"IdyoQn59Vs1a","executionInfo":{"status":"ok","timestamp":1605442735488,"user_tz":-420,"elapsed":1046,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["def minmax(df_input):\n","  data_temp = df_input.copy()\n","  list_fitur = df_input.columns[:-1]\n","  for fitur in list_fitur:\n","    max = df_input[fitur].max()\n","    min = df_input[fitur].min()\n","    df_input[fitur] = (data_temp[fitur] - min) / (max - min)\n","  return df_input"],"execution_count":168,"outputs":[]},{"cell_type":"code","metadata":{"id":"_YNvEek3Vs1c","executionInfo":{"status":"ok","timestamp":1605443705179,"user_tz":-420,"elapsed":1091,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["data_normalisasi = minmax(data_imputasi)"],"execution_count":205,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"eLRattlxVs1i"},"source":["Normalisasi bertujuan untuk menyamakan rentang nilai setiap fiturnya. Oleh karena itu pastikan hasil normalisasi Anda sudah benar dengan menampilkan perbedaan rentang data sebelum dan setelah normalisasi. Lakukan pengecekan **rentang data** pada kedua *dataframe* (data_imputasi dan data_normalisasi) pada *cell* di bawah ini."]},{"cell_type":"code","metadata":{"id":"KoxDRP5lVs1j","executionInfo":{"status":"ok","timestamp":1605442739395,"user_tz":-420,"elapsed":1096,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["def cek_rentang(df_input):\n","  list_fitur = df_input.columns[:-1]\n","  for fitur in list_fitur:\n","    max = df_input[fitur].max()\n","    min = df_input[fitur].min()\n","    print('Rentang fitur', fitur, 'adalah', max-min)"],"execution_count":170,"outputs":[]},{"cell_type":"code","metadata":{"id":"1vEE9w_JVs1n","executionInfo":{"status":"ok","timestamp":1605442769227,"user_tz":-420,"elapsed":1097,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"0c694d85-0664-46fb-ac1a-15927bc962e3","colab":{"base_uri":"https://localhost:8080/","height":0}},"source":["cek_rentang(data)"],"execution_count":177,"outputs":[{"output_type":"stream","text":["Rentang fitur clump_thickness adalah 9.0\n","Rentang fitur cell_size adalah 9.0\n","Rentang fitur cell_shape adalah 9.0\n","Rentang fitur marginal_adhesion adalah 9.0\n","Rentang fitur epithelial_cell_size adalah 9.0\n","Rentang fitur bare_nucklei adalah 9.0\n","Rentang fitur bland_chromatin adalah 8.0\n","Rentang fitur normal_nucleoli adalah 9.0\n","Rentang fitur mitoses adalah 9.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Nons5pdrVs1q","executionInfo":{"status":"ok","timestamp":1605442775917,"user_tz":-420,"elapsed":692,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"b5e6653c-4ff8-4414-c5ca-48e0aa1b6e4c","colab":{"base_uri":"https://localhost:8080/","height":0}},"source":["cek_rentang(data_normalisasi)"],"execution_count":179,"outputs":[{"output_type":"stream","text":["Rentang fitur clump_thickness adalah 1.0\n","Rentang fitur cell_size adalah 1.0\n","Rentang fitur cell_shape adalah 1.0\n","Rentang fitur marginal_adhesion adalah 1.0\n","Rentang fitur epithelial_cell_size adalah 1.0\n","Rentang fitur bare_nucklei adalah 1.0\n","Rentang fitur bland_chromatin adalah 1.0\n","Rentang fitur normal_nucleoli adalah 1.0\n","Rentang fitur mitoses adalah 1.0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"bEMgj2Q2Vs1t"},"source":["#### 2.3. Uji Hasil *Preprocessing*\n","Uji hasil *preprocessing* data Anda dengan menampilkan kedua *dataset* sebelum dan sesudah *preprocessing*."]},{"cell_type":"code","metadata":{"id":"x3NVDvMiVs1v","executionInfo":{"status":"ok","timestamp":1605442203535,"user_tz":-420,"elapsed":929,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"10551cb4-f812-4828-8410-6a9bdce13afe","colab":{"base_uri":"https://localhost:8080/","height":225}},"source":["data.head()"],"execution_count":122,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clump_thickness</th>\n","      <th>cell_size</th>\n","      <th>cell_shape</th>\n","      <th>marginal_adhesion</th>\n","      <th>epithelial_cell_size</th>\n","      <th>bare_nucklei</th>\n","      <th>bland_chromatin</th>\n","      <th>normal_nucleoli</th>\n","      <th>mitoses</th>\n","      <th>diagnosis</th>\n","    </tr>\n","    <tr>\n","      <th>id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1000025</th>\n","      <td>5.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1002945</th>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1015425</th>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1016277</th>\n","      <td>6.0</td>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>7.0</td>\n","      <td>1.0</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1017023</th>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>benign</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         clump_thickness  cell_size  ...  mitoses  diagnosis\n","id                                   ...                    \n","1000025              5.0        1.0  ...      1.0     benign\n","1002945              5.0        4.0  ...      1.0     benign\n","1015425              3.0        1.0  ...      1.0     benign\n","1016277              6.0        8.0  ...      1.0     benign\n","1017023              4.0        1.0  ...      NaN     benign\n","\n","[5 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":122}]},{"cell_type":"code","metadata":{"id":"t02qBdVSVs1x","executionInfo":{"status":"ok","timestamp":1605442781323,"user_tz":-420,"elapsed":920,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"7426bcf1-d532-4ad6-8e96-e4ce7b50981d","colab":{"base_uri":"https://localhost:8080/","height":225}},"source":["data_normalisasi.head()"],"execution_count":180,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clump_thickness</th>\n","      <th>cell_size</th>\n","      <th>cell_shape</th>\n","      <th>marginal_adhesion</th>\n","      <th>epithelial_cell_size</th>\n","      <th>bare_nucklei</th>\n","      <th>bland_chromatin</th>\n","      <th>normal_nucleoli</th>\n","      <th>mitoses</th>\n","      <th>diagnosis</th>\n","    </tr>\n","    <tr>\n","      <th>id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1000025</th>\n","      <td>0.444444</td>\n","      <td>0.000000</td>\n","      <td>0.070707</td>\n","      <td>0.000000</td>\n","      <td>0.128019</td>\n","      <td>0.000000</td>\n","      <td>0.25</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1002945</th>\n","      <td>0.444444</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.444444</td>\n","      <td>0.666667</td>\n","      <td>0.041344</td>\n","      <td>0.25</td>\n","      <td>0.040404</td>\n","      <td>0.000000</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1015425</th>\n","      <td>0.222222</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.128019</td>\n","      <td>0.111111</td>\n","      <td>0.25</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1016277</th>\n","      <td>0.555556</td>\n","      <td>0.777778</td>\n","      <td>0.777778</td>\n","      <td>0.000000</td>\n","      <td>0.222222</td>\n","      <td>0.041344</td>\n","      <td>0.25</td>\n","      <td>0.666667</td>\n","      <td>0.000000</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1017023</th>\n","      <td>0.333333</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.222222</td>\n","      <td>0.128019</td>\n","      <td>0.000000</td>\n","      <td>0.25</td>\n","      <td>0.000000</td>\n","      <td>0.012626</td>\n","      <td>benign</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         clump_thickness  cell_size  ...   mitoses  diagnosis\n","id                                   ...                     \n","1000025         0.444444   0.000000  ...  0.000000     benign\n","1002945         0.444444   0.333333  ...  0.000000     benign\n","1015425         0.222222   0.000000  ...  0.000000     benign\n","1016277         0.555556   0.777778  ...  0.000000     benign\n","1017023         0.333333   0.000000  ...  0.012626     benign\n","\n","[5 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":180}]},{"cell_type":"markdown","metadata":{"id":"FzmWZ-HuVs13"},"source":["Berdasarkan hasil kode sejauh ini, jawab pertanyaan berikut:\n","1.   Sebutkan perbedaan apa saja yang bisa Anda temukan!\n","2.   Menurut Anda, apa alasan mengapa diperlukan *preprocessing* pada *dataset* yang digunakan pada ujian ini?"]},{"cell_type":"markdown","metadata":{"id":"rxA1vKUwVs14"},"source":["**JAWABAN NO. 1:**\n","\n","Perbedaan yang dapat ditemukan adalah pada data sebelum preprocessing terdapat beberapa nilai NaN dan range data adalah sebesar 9, sedangkan pada data yang sudah melewati fase preprocessing sudah tidak ada lagi nilai NaN dan data sudah dinormalisasi menggunakan metode min max sehingga range data menjadi 1."]},{"cell_type":"markdown","metadata":{"id":"Ox2xlW5mVs15"},"source":["**JAWABAN NO. 2:**\n","\n","Preprocessing perlu dilakukan untuk memperbaiki data agar ketika diproses menggunakan model machine learning, model dapat bekerja dengan maksimal, karena hasil yang kita terima bukan semata-mata berdasarkan akurasi dan tingkat kehebatan sebuah model namun juga bergantung pada dataset yang kita gunakan sehingga data harus diperhatikan konsistensi formatnya, memperkecil skala datanya, menghilangkan duplikasi data, dan memproses missing value."]},{"cell_type":"markdown","metadata":{"id":"D9wokBG_Vs15"},"source":["### 3. *Data Splitting*\n","Pisahkan data latih dan data uji dengan rasio 80:20 dengan memanfaatkan *library* **scikit-learn** dan menggunakan fungsi **train_test_split**.\n","\n","Simpan hasil pemisahan data ke dalam *dataframe* dengan nama **data_latih** dan **data_uji**."]},{"cell_type":"code","metadata":{"id":"IvlbT3BLVs16","executionInfo":{"status":"ok","timestamp":1605442583317,"user_tz":-420,"elapsed":1042,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["from sklearn.model_selection import train_test_split\n","data = data_normalisasi\n","data_latih, data_uji = train_test_split(data, test_size=0.2)"],"execution_count":152,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ebgJvzpFVs18"},"source":["Periksa apakah data latih dan data uji sudah terbagi dengan rasio 80:20."]},{"cell_type":"code","metadata":{"id":"w-jXr-BrVs19","executionInfo":{"status":"ok","timestamp":1605442585598,"user_tz":-420,"elapsed":1123,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"9ca12763-4814-40a2-cf0e-26b77fa3b199","colab":{"base_uri":"https://localhost:8080/","height":0}},"source":["print(len(data_latih))\n","print(len(data_uji))"],"execution_count":153,"outputs":[{"output_type":"stream","text":["80\n","20\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"fQxc__I6Vs2C"},"source":["### 3. Klasifikasi Data\n","Pada ujian ini akan dilakukan implementasi dari dua metode klasifikasi, yaitu metode *K-Nearest Neighbour* (KNN) dengan menggunakan metode perhitungan jarak *Euclidean* dan metode *Naïve Bayes*.\n","\n","Sebelumnya, simpan terlebih dahulu label/ kelas dari setiap **data_uji** ke dalam list **label_uji** yang akan digunakan untuk tahap selanjutnya."]},{"cell_type":"code","metadata":{"id":"tfzm-veqVs2C","executionInfo":{"status":"ok","timestamp":1605442631154,"user_tz":-420,"elapsed":934,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["label_uji = data_uji.pop('diagnosis')\n","label_latih = data_latih.pop('diagnosis')"],"execution_count":155,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"FhrDwP_mVs2J"},"source":["#### 3.1. Klasifikasi KNN\n","Lakukan klasifikasi terhadap *dataframe* **data_uji** berdasarkan data dari **data_latih** menggunakan metode klasifikasi KNN dengan metode perhitungan jarak *Euclidean*.\n","\n","Simpan hasil klasifikasi KNN dalam sebuah list bernama **hasil_knn**."]},{"cell_type":"code","metadata":{"id":"WljgMdu8Vs2K","executionInfo":{"status":"ok","timestamp":1605442633054,"user_tz":-420,"elapsed":817,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["import numpy as np\n","\n","def jarakEu(data1, data2):\n","  jarak = np.square(data1 - data2)\n","  jarak = np.sum(jarak)\n","  return np.sqrt(jarak)"],"execution_count":156,"outputs":[]},{"cell_type":"code","metadata":{"id":"SUbSudbgVs2N","executionInfo":{"status":"ok","timestamp":1605441891093,"user_tz":-420,"elapsed":1092,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["from collections import Counter\n","\n","def knn(k, datalatih, labellatih, datauji):\n","  jarak = np.array([jarakEu(datalatih.iloc[x], datauji) for x in range (datalatih.shape[0])])\n","  indeks_k_minimum = jarak.argsort()[:k]\n","  k_kelas = labellatih.iloc[indeks_k_minimum].to_numpy()\n","  counter = Counter(k_kelas)\n","  kelas_uji = counter.most_common(1)[0][0]\n","  return kelas_uji"],"execution_count":83,"outputs":[]},{"cell_type":"code","metadata":{"id":"-cD1Z7r0Vs2Q","executionInfo":{"status":"ok","timestamp":1605442635563,"user_tz":-420,"elapsed":1243,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"4ae6c739-fecc-48f7-8ab1-9e62de716ced","colab":{"base_uri":"https://localhost:8080/","height":0}},"source":["hasil_knn = knn(5, data_latih, label_latih, data_uji.iloc[0])\n","print(hasil_knn)"],"execution_count":157,"outputs":[{"output_type":"stream","text":["malignant\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"kAg8hSpTVs2U"},"source":["#### 3.2. Klasifikasi *Naïve Bayes*\n","Lakukan klasifikasi terhadap *dataframe* **data_uji** berdasarkan data dari **data_latih** menggunakan metode klasifikasi *Naïve Bayes*.\n","\n","Simpan hasil klasifikasi *Naïve Bayes* dalam sebuah list bernama **hasil_naive_bayes**."]},{"cell_type":"code","metadata":{"id":"l9fJRzYTVs2Y","executionInfo":{"status":"ok","timestamp":1605443711420,"user_tz":-420,"elapsed":953,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"b91ba87f-5829-42fc-a44f-d024ac97a22b","colab":{"base_uri":"https://localhost:8080/","height":225}},"source":["datanb = data_normalisasi\n","datanb.head()"],"execution_count":206,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clump_thickness</th>\n","      <th>cell_size</th>\n","      <th>cell_shape</th>\n","      <th>marginal_adhesion</th>\n","      <th>epithelial_cell_size</th>\n","      <th>bare_nucklei</th>\n","      <th>bland_chromatin</th>\n","      <th>normal_nucleoli</th>\n","      <th>mitoses</th>\n","      <th>diagnosis</th>\n","    </tr>\n","    <tr>\n","      <th>id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1000025</th>\n","      <td>0.444444</td>\n","      <td>0.000000</td>\n","      <td>0.070707</td>\n","      <td>0.000000</td>\n","      <td>0.128019</td>\n","      <td>0.000000</td>\n","      <td>0.25</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1002945</th>\n","      <td>0.444444</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.444444</td>\n","      <td>0.666667</td>\n","      <td>0.041344</td>\n","      <td>0.25</td>\n","      <td>0.040404</td>\n","      <td>0.000000</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1015425</th>\n","      <td>0.222222</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.128019</td>\n","      <td>0.111111</td>\n","      <td>0.25</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1016277</th>\n","      <td>0.555556</td>\n","      <td>0.777778</td>\n","      <td>0.777778</td>\n","      <td>0.000000</td>\n","      <td>0.222222</td>\n","      <td>0.041344</td>\n","      <td>0.25</td>\n","      <td>0.666667</td>\n","      <td>0.000000</td>\n","      <td>benign</td>\n","    </tr>\n","    <tr>\n","      <th>1017023</th>\n","      <td>0.333333</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.222222</td>\n","      <td>0.128019</td>\n","      <td>0.000000</td>\n","      <td>0.25</td>\n","      <td>0.000000</td>\n","      <td>0.012626</td>\n","      <td>benign</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         clump_thickness  cell_size  ...   mitoses  diagnosis\n","id                                   ...                     \n","1000025         0.444444   0.000000  ...  0.000000     benign\n","1002945         0.444444   0.333333  ...  0.000000     benign\n","1015425         0.222222   0.000000  ...  0.000000     benign\n","1016277         0.555556   0.777778  ...  0.000000     benign\n","1017023         0.333333   0.000000  ...  0.012626     benign\n","\n","[5 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":206}]},{"cell_type":"code","metadata":{"id":"Bes3ib4uVs2b","executionInfo":{"status":"ok","timestamp":1605443737394,"user_tz":-420,"elapsed":960,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["x = datanb[datanb.columns[:10]]\n","y = datanb['diagnosis']\n","\n","x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2)"],"execution_count":207,"outputs":[]},{"cell_type":"code","metadata":{"id":"3eLX2bZ7Vs2U","executionInfo":{"status":"ok","timestamp":1605445594403,"user_tz":-420,"elapsed":1114,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"7f226fbd-b36a-4b38-db4c-d2f686ee7388","colab":{"base_uri":"https://localhost:8080/"}},"source":["def hitung_prior(list_kelas):\n","  n_data = len(list_kelas)\n","  prior = Counter(list_kelas)\n","  for key in prior.keys():\n","    prior[key] = prior[key] / n_data\n","  return prior\n","\n","prior = hitung_prior(y)\n","print(prior)"],"execution_count":260,"outputs":[{"output_type":"stream","text":["Counter({'benign': 0.5, 'malignant': 0.5})\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"FBO5dWuTVs2f","executionInfo":{"status":"ok","timestamp":1605444847565,"user_tz":-420,"elapsed":1221,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["def hitung_rata2_std_kelas(input_data):\n","  list_columns = input_data.columns[:-1]\n","  class_column_name = input_data.columns[-1]\n","  list_class = set(input_data[class_column_name])\n","  rata2 = {}\n","  std = {}\n","  for column in list_columns:\n","    for a_class in list_class:\n","      rata2[(a_class,column)] = input_data.loc[input_data[class_column_name] == a_class][column].mean()\n","      std[(a_class,column)] = input_data.loc[input_data[class_column_name] == a_class][column].std()\n","  return(rata2,std)"],"execution_count":237,"outputs":[]},{"cell_type":"code","metadata":{"id":"vN7pAIqeVs2j","executionInfo":{"status":"ok","timestamp":1605446619351,"user_tz":-420,"elapsed":924,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["import math\n","def hitung_likelihood_gaussian(data,rata2,std):\n","  hasil = (1/(math.sqrt(2*math.pi*(std**2))))*math.exp((-1*((data-rata2)**2))/(2*(std**2)))\n","  return hasil"],"execution_count":295,"outputs":[]},{"cell_type":"code","metadata":{"id":"2iBdPYQNVs2p","executionInfo":{"status":"ok","timestamp":1605445163815,"user_tz":-420,"elapsed":1198,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["def training_naive_bayes_gaussian(data_latih):\n","  class_column_name = data_latih.columns[-1]\n","  prior = hitung_prior(data_latih[class_column_name])\n","  (rata2,std) = hitung_rata2_std_kelas(data_latih)\n","  list_class = set(data_latih[class_column_name])\n","  list_columns = data_latih.columns[:-1]\n","  model = {}\n","  model['prior'] = prior\n","  model['rata2'] = rata2\n","  model['std'] = std \n","  model['list_class'] = list_class\n","  model['list_columns'] = list_columns\n","  return model "],"execution_count":250,"outputs":[]},{"cell_type":"code","metadata":{"id":"tK2iHup3Vs2t","executionInfo":{"status":"ok","timestamp":1605446733150,"user_tz":-420,"elapsed":1205,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["model = training_naive_bayes_gaussian(x_train)"],"execution_count":299,"outputs":[]},{"cell_type":"code","metadata":{"id":"UtB_NWqI6P7h","executionInfo":{"status":"ok","timestamp":1605445168636,"user_tz":-420,"elapsed":1048,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["def testing_naive_bayes_gaussian(model,data_uji):\n","  prior = model['prior']\n","  rata2 = model['rata2']\n","  std = model['std']\n","  list_class = model['list_class']\n","  list_columns = model['list_columns']\n","  posterior = dict.fromkeys(list_class,1)\n","  for a_class in list_class:\n","    for column in list_columns:\n","      posterior[a_class] = posterior[a_class]*hitung_likelihood_gaussian(data_uji[column],rata2[(a_class,column)],std[(a_class,column)])\n","    posterior[a_class] = posterior[a_class] * prior[a_class]\n","  kelas_uji = max(posterior,key=posterior.get)\n","  return kelas_uji"],"execution_count":252,"outputs":[]},{"cell_type":"code","metadata":{"id":"Oh71gIuo6Q3i","executionInfo":{"status":"ok","timestamp":1605446745556,"user_tz":-420,"elapsed":1099,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"d04b94eb-8d5d-401d-ad97-78c51348d1f3","colab":{"base_uri":"https://localhost:8080/"}},"source":["prediksi = testing_naive_bayes_gaussian(model,x_test.iloc[0])\n","print(prediksi)"],"execution_count":301,"outputs":[{"output_type":"stream","text":["malignant\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"fvZFNy3wVs2x"},"source":["#### 3.3. Uji Hasil Klasifikasi\n","Tampilkan hasil label/ kelas yang didapatkan dari masing-masing metode klasifikasi."]},{"cell_type":"code","metadata":{"id":"THjkap6fVs2y","executionInfo":{"status":"ok","timestamp":1605445537635,"user_tz":-420,"elapsed":1763,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"8b525251-6e76-409c-ce7a-31b209f7c109","colab":{"base_uri":"https://localhost:8080/"}},"source":["def knn_multi(k, datalatih, labellatih, datauji):\n","  hasil = np.array([knn(k, datalatih, labellatih, datauji.iloc[x]) for x in range(datauji.shape[0])])\n","  return hasil\n","\n","hasil_knn = knn_multi(3, data_latih, label_latih, data_uji)\n","print(hasil_knn)"],"execution_count":258,"outputs":[{"output_type":"stream","text":["['malignant' 'malignant' 'malignant' 'malignant' 'malignant' 'malignant'\n"," 'malignant' 'malignant' 'benign' 'benign' 'benign' 'malignant' 'benign'\n"," 'malignant' 'malignant' 'benign' 'malignant' 'malignant' 'malignant'\n"," 'benign']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"UfmfTCB7Vs20","executionInfo":{"status":"ok","timestamp":1605446767346,"user_tz":-420,"elapsed":944,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"1a338756-57f4-4478-beff-267e97e02ee4","colab":{"base_uri":"https://localhost:8080/"}},"source":["hasil_naive_bayes = np.array([testing_naive_bayes_gaussian(model,data_uji.iloc[x]) for x in range(data_uji.shape[0])])\n","print(hasil_naive_bayes)"],"execution_count":302,"outputs":[{"output_type":"stream","text":["['malignant' 'malignant' 'malignant' 'malignant' 'malignant' 'benign'\n"," 'malignant' 'malignant' 'benign' 'benign' 'benign' 'malignant' 'benign'\n"," 'malignant' 'malignant' 'benign' 'malignant' 'malignant' 'malignant'\n"," 'benign']\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"-WQOCGh6Vs23"},"source":["Tampilkan nilai akurasi yang didapatkan dari masing-masing metode klasifikasi dengan menggunakan rumus *Accuracy*, yaitu:\n","\n","$accuracy=\\frac{n}{N}$\n","\n","Dimana, $n$ merupakan jumlah label/ kelas dari hasil klasifikasi yang sama dengan label/ kelas aslinya. Sedangkan $N$ adalah jumlah data uji yang ada."]},{"cell_type":"code","metadata":{"id":"3HIGdMIxVs24","executionInfo":{"status":"ok","timestamp":1605444955503,"user_tz":-420,"elapsed":956,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}}},"source":["def cek_hasil(a, b):\n","  hasil = sum(1 for i in range(len(a)) if (a[i] == b[i]))\n","  return hasil\n","label_uji_array = np.array(label_uji)"],"execution_count":242,"outputs":[]},{"cell_type":"code","metadata":{"id":"dUY7rHtBVs26","executionInfo":{"status":"ok","timestamp":1605446406237,"user_tz":-420,"elapsed":924,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"e493990c-6ab3-47bd-f2bb-d8601bac8729","colab":{"base_uri":"https://localhost:8080/"}},"source":["akurasi_knn = (cek_hasil(hasil_knn, label_uji_array) / label_uji.shape[0])\n","print(akurasi_knn)"],"execution_count":281,"outputs":[{"output_type":"stream","text":["0.95\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"e4TpDWQP_KJ9","executionInfo":{"status":"ok","timestamp":1605446771519,"user_tz":-420,"elapsed":1105,"user":{"displayName":"ROWAN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7oTtoRYqZxlQKh3LC4hXCKFAf9n8b_JlYKkt=s64","userId":"04240733194799389277"}},"outputId":"47c426ac-087c-4f63-e946-54dcc6a33954","colab":{"base_uri":"https://localhost:8080/"}},"source":["akurasi_naive_bayes = (cek_hasil(hasil_naive_bayes, label_uji_array) / label_uji.shape[0])\n","print(akurasi_naive_bayes)"],"execution_count":303,"outputs":[{"output_type":"stream","text":["0.9\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"7xGNW2MXVs29"},"source":["Apakah ada perbedaan hasil uji di antara kedua metode klasifikasi tersebut? Jika ada, sebutkan dan jelaskan mengapa bisa terjadi menurut pengamatan Anda!"]},{"cell_type":"markdown","metadata":{"id":"jxQlnxCoVs29"},"source":["**JAWABAN:**\n","\n","Ada , perbedaan bisa terjadi akibat perbedaan metode dan pendekatan yang digunakan pada masing-masing metode dan parameter yang digunakan."]},{"cell_type":"markdown","metadata":{"id":"J3ILdx3IVs2_"},"source":["### Kesimpulan\n","Apa yang dapat Anda simpulkan dari implementasi dan hasil kedua metode klasifikasi diatas?"]},{"cell_type":"markdown","metadata":{"id":"dQrDqcqiVs3A"},"source":["**JAWABAN:**\n","\n","Kesimpulan yang dapat diambil adalah kedua metode tersebut menggunakan pendekatan yang berbeda dalam memprediksi kelas dari sebuah objek, sehingga hasil yang diperoleh juga berbeda beda. Pada KNN yang dijadikan acuan untuk memprediksi kelas adalah jarak euclidean dari suatu objek ke objek lainnya, sedangkan pada Naive Bayes yang digunakan adalah rata2 dan standar deviasi."]},{"cell_type":"markdown","metadata":{"id":"SBnWAT1qVs3A"},"source":["---\n","\n","**Selamat Anda sudah selesai mengerjakan ujian ini!** \n","> Jika merasa kurang yakin, silahkan dicek ulang jawaban Anda.\n","\n","> Jika sudah, silahkan dikumpulkan ke *link* yang diberikan asisten masing-masing.\n","\n","Kami dari TIM Asisten Pengantar Pembelajaran Mesin mengucapkan selamat telah menempuh ujian tengah praktikum ini. Ditunggu hasilnya dan semoga memuaskan! Selamat beristirahat!"]}]}